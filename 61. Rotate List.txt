/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
       if (head == null || head.next == null || k == 0) {
            return head;
        }

        int count = 1;  
        ListNode curr = head;
        while (curr.next != null) {  
            count++;
            curr = curr.next;
        }

        curr.next = head;

        k = k % count;
        if (k == 0) {  
            curr.next = null;  
            return head;
        }

        ListNode temp = head;
        for (int i = 1; i < count - k; i++) {
            temp = temp.next;
        }

        ListNode newhead = temp.next;
        temp.next = null;  
        return newhead;
    }
}